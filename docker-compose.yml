# version: '3.9'

services:
  redis:
    image: redis:alpine
    container_name: bookipauth_redis
    ports:
      - "6379:6379"

  postgres:
    image: postgres:latest
    container_name: bookipauth_postgres
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  django1:
    container_name: bookipauth_django1
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: /bin/bash -c "source /bookipauth/venv/bin/activate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/bookipauth
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=postgres
    networks:
      - bookipauth_network

  django2:
    container_name: bookipauth_django2
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: /bin/bash -c "source /bookipauth/venv/bin/activate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/bookipauth
    ports:
      - "8002:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=postgres
    networks:
      - bookipauth_network

  nginx:
    container_name: bookipauth_nginx
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.confs
    ports:
      - "80:80"
    depends_on:
      - django1
      - django2
    networks:
      - bookipauth_network

volumes:
  postgres_data:

networks:
  bookipauth_network:
    driver: bridge
